{"ast":null,"code":"import axios from \"axios\";\nimport service from \"./config.services\"; //* Creamos un servicio que busca todos los archivos de acceso y registro de la base de datos.\n\nconst signupService = user => {\n  return service.post(\"/auth/signup\", user);\n};\n\nconst loginService = user => {\n  return service.post(\"/auth/login\", user);\n};\n\nconst verifyService = () => {\n  return service.get(\"/auth/verify\");\n}; //! Necesitaremos configurar el envío del token.\n\n\nexport { signupService, loginService, verifyService };","map":{"version":3,"names":["axios","service","signupService","user","post","loginService","verifyService","get"],"sources":["C:/Users/Kula/Documents/IronHack-material/modulo_3/Proyecto3/gamer-orbit-client/src/services/auth.services.js"],"sourcesContent":["import axios from \"axios\";\r\nimport service from \"./config.services\";\r\n\r\n//* Creamos un servicio que busca todos los archivos de acceso y registro de la base de datos.\r\n\r\nconst signupService = (user) => {\r\n    return service.post(\"/auth/signup\", user)\r\n}\r\n\r\nconst loginService = (user) => {\r\n    return service.post(\"/auth/login\", user)\r\n}\r\n\r\nconst verifyService = () => {\r\n    return service.get(\"/auth/verify\")\r\n} //! Necesitaremos configurar el envío del token.\r\n\r\nexport {\r\n    signupService,\r\n    loginService,\r\n    verifyService\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB,C,CAEA;;AAEA,MAAMC,aAAa,GAAIC,IAAD,IAAU;EAC5B,OAAOF,OAAO,CAACG,IAAR,CAAa,cAAb,EAA6BD,IAA7B,CAAP;AACH,CAFD;;AAIA,MAAME,YAAY,GAAIF,IAAD,IAAU;EAC3B,OAAOF,OAAO,CAACG,IAAR,CAAa,aAAb,EAA4BD,IAA5B,CAAP;AACH,CAFD;;AAIA,MAAMG,aAAa,GAAG,MAAM;EACxB,OAAOL,OAAO,CAACM,GAAR,CAAY,cAAZ,CAAP;AACH,CAFD,C,CAEE;;;AAEF,SACIL,aADJ,EAEIG,YAFJ,EAGIC,aAHJ"},"metadata":{},"sourceType":"module"}