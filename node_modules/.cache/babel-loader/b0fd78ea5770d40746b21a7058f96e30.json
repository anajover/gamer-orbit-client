{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kula\\\\Documents\\\\IronHack-material\\\\modulo_3\\\\Proyecto3\\\\gamer-orbit-client\\\\src\\\\context\\\\auth.context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { verifyService } from \"../services/auth.services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nfunction AuthWrapper(props) {\n  _s();\n\n  // estado para saber si está logueado\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null); //chequeará continuamente si está logueado\n\n  const authenticateUser = async () => {\n    try {\n      // donde llamaremos a esa ruta verify y nos dará la información del payload\n      const response = await verifyService();\n      console.log(\"Token valido\");\n      console.log(\"el payload es:\", response.data);\n    } catch (error) {\n      console.log(\"El usuario no tiene token válido.\");\n    }\n  };\n\n  const passedContext = {\n    isLoggedIn,\n    user,\n    authenticateUser\n  };\n  return (\n    /*#__PURE__*/\n    // esto simplemente es para definir que lo que vaya entre el wrapper va a ser el props.children\n    // por ejemplo, si envolvemos el index con el wrapper, el index es lo que se convierte en el props.children.\n    _jsxDEV(AuthContext.Provider, {\n      value: passedContext,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(AuthWrapper, \"rtvmPgFuLm32CRKYJM3CV+f7aEs=\");\n\n_c = AuthWrapper;\nexport { AuthContext, AuthWrapper };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthWrapper\");","map":{"version":3,"names":["createContext","useState","verifyService","AuthContext","AuthWrapper","props","isLoggedIn","setIsLoggedIn","user","setUser","authenticateUser","response","console","log","data","error","passedContext","children"],"sources":["C:/Users/Kula/Documents/IronHack-material/modulo_3/Proyecto3/gamer-orbit-client/src/context/auth.context.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { verifyService } from \"../services/auth.services\";\r\n\r\nconst AuthContext = createContext()\r\n\r\nfunction AuthWrapper(props) {\r\n\r\n    // estado para saber si está logueado\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const [user, setUser] = useState(null)\r\n\r\n    //chequeará continuamente si está logueado\r\n    const authenticateUser = async () => {\r\n\r\n        try {\r\n\r\n            // donde llamaremos a esa ruta verify y nos dará la información del payload\r\n            const response = await verifyService()\r\n            console.log(\"Token valido\")\r\n            console.log(\"el payload es:\", response.data)\r\n\r\n        } catch (error) {\r\n            console.log(\"El usuario no tiene token válido.\")\r\n        }\r\n\r\n    }\r\n\r\n    const passedContext = {\r\n        isLoggedIn,\r\n        user,\r\n        authenticateUser\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        // esto simplemente es para definir que lo que vaya entre el wrapper va a ser el props.children\r\n        // por ejemplo, si envolvemos el index con el wrapper, el index es lo que se convierte en el props.children.\r\n        <AuthContext.Provider value={passedContext}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n\r\n\r\n\r\n}\r\n\r\nexport {AuthContext, AuthWrapper}"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,aAAT,QAA8B,2BAA9B;;AAEA,MAAMC,WAAW,gBAAGH,aAAa,EAAjC;;AAEA,SAASI,WAAT,CAAqBC,KAArB,EAA4B;EAAA;;EAExB;EACA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAAhC,CAJwB,CAMxB;;EACA,MAAMS,gBAAgB,GAAG,YAAY;IAEjC,IAAI;MAEA;MACA,MAAMC,QAAQ,GAAG,MAAMT,aAAa,EAApC;MACAU,OAAO,CAACC,GAAR,CAAY,cAAZ;MACAD,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,QAAQ,CAACG,IAAvC;IAEH,CAPD,CAOE,OAAOC,KAAP,EAAc;MACZH,OAAO,CAACC,GAAR,CAAY,mCAAZ;IACH;EAEJ,CAbD;;EAeA,MAAMG,aAAa,GAAG;IAClBV,UADkB;IAElBE,IAFkB;IAGlBE;EAHkB,CAAtB;EAOA;IAAA;IAEI;IACA;IACA,QAAC,WAAD,CAAa,QAAb;MAAsB,KAAK,EAAEM,aAA7B;MAAA,UACKX,KAAK,CAACY;IADX;MAAA;MAAA;MAAA;IAAA;EAJJ;AAWH;;GAxCQb,W;;KAAAA,W;AA0CT,SAAQD,WAAR,EAAqBC,WAArB"},"metadata":{},"sourceType":"module"}