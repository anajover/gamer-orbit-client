{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { listGamesDetailsService } from \"../services/games.services\";\n\nfunction VideogamesDetails() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate(); // Llamar a la API\n  //! 1. Estados\n\n  const [gameDetails, setGameDetails] = useState(null); //! 2. Acceder al componentDidMount\n\n  useEffect(() => {\n    getVideogamesDetails();\n  }, []); //! 3. Función que llama a la API y se comunica con componentDidMount\n\n  const getVideogamesDetails = async () => {\n    try {\n      // 1. Llamada a la API\n      const response = await listGamesDetailsService(id);\n      console.log(\"Games Details\", response.data); // 2. Actualizamos el estado con la respuesta de la API.\n\n      setGameDetails(response.data);\n      console.log(\"response.data\", response.data);\n      console.log(\"gameDetails\", gameDetails);\n    } catch (error) {\n      navigate(\"/error\");\n    }\n  };\n}\n\n_s(VideogamesDetails, \"9b9VbdK8ppjuEbWJx26uZtT7tsk=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = VideogamesDetails;\nexport default VideogamesDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideogamesDetails\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","PulseLoader","listGamesDetailsService","VideogamesDetails","id","navigate","gameDetails","setGameDetails","getVideogamesDetails","response","console","log","data","error"],"sources":["/Users/pelayotrives/Desktop/ironhack-material/modulo3/dia7/gamer-orbit-client/src/pages/VideogamesDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport { listGamesDetailsService } from \"../services/games.services\";\n\nfunction VideogamesDetails() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  // Llamar a la API\n  //! 1. Estados\n  const [gameDetails, setGameDetails] = useState(null);\n\n  //! 2. Acceder al componentDidMount\n  useEffect(() => {\n    getVideogamesDetails();\n  }, []);\n\n  //! 3. Función que llama a la API y se comunica con componentDidMount\n  const getVideogamesDetails = async () => {\n    try {\n      // 1. Llamada a la API\n      const response = await listGamesDetailsService(id);\n      console.log(\"Games Details\", response.data);\n\n      // 2. Actualizamos el estado con la respuesta de la API.\n      setGameDetails(response.data);\n      console.log(\"response.data\", response.data);\n      console.log(\"gameDetails\", gameDetails);\n    } catch (error) {\n      navigate(\"/error\");\n    }\n\n    \n  };\n}\n\nexport default VideogamesDetails;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,uBAAT,QAAwC,4BAAxC;;AAEA,SAASC,iBAAT,GAA6B;EAAA;;EAC3B,MAAM;IAAEC;EAAF,IAASJ,SAAS,EAAxB;EACA,MAAMK,QAAQ,GAAGN,WAAW,EAA5B,CAF2B,CAI3B;EACA;;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,IAAD,CAA9C,CAN2B,CAQ3B;;EACAD,SAAS,CAAC,MAAM;IACdW,oBAAoB;EACrB,CAFQ,EAEN,EAFM,CAAT,CAT2B,CAa3B;;EACA,MAAMA,oBAAoB,GAAG,YAAY;IACvC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMP,uBAAuB,CAACE,EAAD,CAA9C;MACAM,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAACG,IAAtC,EAHE,CAKF;;MACAL,cAAc,CAACE,QAAQ,CAACG,IAAV,CAAd;MACAF,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAAQ,CAACG,IAAtC;MACAF,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BL,WAA3B;IACD,CATD,CASE,OAAOO,KAAP,EAAc;MACdR,QAAQ,CAAC,QAAD,CAAR;IACD;EAGF,CAfD;AAgBD;;GA9BQF,iB;UACQH,S,EACED,W;;;KAFVI,iB;AAgCT,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}