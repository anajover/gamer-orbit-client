{"ast":null,"code":"var _jsxFileName = \"/Users/pelayotrives/Desktop/ironhack-material/modulo3/dia7/gamer-orbit-client/src/pages/Videogames.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport axios from \"axios\";\nimport { listGamesService } from \"../services/games.services\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Videogames() {\n  _s();\n\n  const navigate = useNavigate(); //* Pasos para llamar a la API e interactuar con el contenido\n  //! 1. Estados\n\n  const [allGames, setAllGames] = useState(null); //TODO ---> const [searchingData, setSearchingData] = useState(true)\n  //! 2. Acceder al componentDidMount\n\n  useEffect(() => {\n    getVideogames();\n  }, []); //! 3. Función que llama a la API y se comunica con componentDidMount().\n\n  const getVideogames = async () => {\n    try {\n      //* 1.) Llamada a Axios\n      const response = await listGamesService();\n      console.log(response); //* 2.) Actualizamos el estado con la respuesta de la API. En Axios, siempre es el \"nombreDeLaConst.data\".\n\n      setAllGames(response.data); //TODO ---> 3.) Estado del spinner\n      //TODO ---> Invocación de la actualización de estado para activar el Loading\n      //TODO ---> setSearchingData(false)\n    } catch (error) {\n      navigate(\"/error\");\n    }\n  }; //! 4. Crear efecto de Loading.\n\n\n  if (allGames === null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Cargando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PulseLoader, {\n        color: \"rgb(0,0,0)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  } // ************************ RENDER ************************\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: allGames.results.map(eachGame => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: eachGame.background_image,\n          width: 300,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: eachGame.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: eachGame.released\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: eachGame.rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, eachGame.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Videogames, \"C3BJePqWHaJRWv6xx9OAB+uBMs0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Videogames;\nexport default Videogames;\n\nvar _c;\n\n$RefreshReg$(_c, \"Videogames\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","PulseLoader","axios","listGamesService","Videogames","navigate","allGames","setAllGames","getVideogames","response","console","log","data","error","results","map","eachGame","background_image","name","released","rating","id"],"sources":["/Users/pelayotrives/Desktop/ironhack-material/modulo3/dia7/gamer-orbit-client/src/pages/Videogames.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport axios from \"axios\";\nimport { listGamesService } from \"../services/games.services\";\n\nfunction Videogames() {\n  const navigate = useNavigate();\n\n  //* Pasos para llamar a la API e interactuar con el contenido\n  //! 1. Estados\n  const [allGames, setAllGames] = useState(null);\n  //TODO ---> const [searchingData, setSearchingData] = useState(true)\n\n  //! 2. Acceder al componentDidMount\n  useEffect(() => {\n    getVideogames();\n  }, []);\n\n  //! 3. Función que llama a la API y se comunica con componentDidMount().\n  const getVideogames = async () => {\n    try {\n      //* 1.) Llamada a Axios\n      const response = await listGamesService();\n      console.log(response);\n\n      //* 2.) Actualizamos el estado con la respuesta de la API. En Axios, siempre es el \"nombreDeLaConst.data\".\n      setAllGames(response.data);\n\n      //TODO ---> 3.) Estado del spinner\n      //TODO ---> Invocación de la actualización de estado para activar el Loading\n      //TODO ---> setSearchingData(false)\n    } catch (error) {\n      navigate(\"/error\");\n    }\n  };\n\n  //! 4. Crear efecto de Loading.\n  if (allGames === null) {\n    return (\n      <>\n      <h4>Cargando...</h4>\n      <PulseLoader color={\"rgb(0,0,0)\"} />\n      </>\n    );\n  }\n\n  // ************************ RENDER ************************\n\n  return (\n    <div>\n      {allGames.results.map((eachGame) => {\n        return (\n          <div key={eachGame.id}>\n            <img src={eachGame.background_image} width={300} alt=\"\" />\n            \n            <h3>{eachGame.name}</h3>\n            <h4>{eachGame.released}</h4>\n            <h5>{eachGame.rating}</h5>            \n            <hr />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Videogames;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;;;;AAEA,SAASC,UAAT,GAAsB;EAAA;;EACpB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B,CADoB,CAGpB;EACA;;EACA,MAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC,CALoB,CAMpB;EAEA;;EACAD,SAAS,CAAC,MAAM;IACdU,aAAa;EACd,CAFQ,EAEN,EAFM,CAAT,CAToB,CAapB;;EACA,MAAMA,aAAa,GAAG,YAAY;IAChC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMN,gBAAgB,EAAvC;MACAO,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAHE,CAKF;;MACAF,WAAW,CAACE,QAAQ,CAACG,IAAV,CAAX,CANE,CAQF;MACA;MACA;IACD,CAXD,CAWE,OAAOC,KAAP,EAAc;MACdR,QAAQ,CAAC,QAAD,CAAR;IACD;EACF,CAfD,CAdoB,CA+BpB;;;EACA,IAAIC,QAAQ,KAAK,IAAjB,EAAuB;IACrB,oBACE;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA,QAAC,WAAD;QAAa,KAAK,EAAE;MAApB;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA,gBADF;EAMD,CAvCmB,CAyCpB;;;EAEA,oBACE;IAAA,UACGA,QAAQ,CAACQ,OAAT,CAAiBC,GAAjB,CAAsBC,QAAD,IAAc;MAClC,oBACE;QAAA,wBACE;UAAK,GAAG,EAAEA,QAAQ,CAACC,gBAAnB;UAAqC,KAAK,EAAE,GAA5C;UAAiD,GAAG,EAAC;QAArD;UAAA;UAAA;UAAA;QAAA,QADF,eAGE;UAAA,UAAKD,QAAQ,CAACE;QAAd;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAA,UAAKF,QAAQ,CAACG;QAAd;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA,UAAKH,QAAQ,CAACI;QAAd;UAAA;UAAA;UAAA;QAAA,QALF,eAME;UAAA;UAAA;UAAA;QAAA,QANF;MAAA,GAAUJ,QAAQ,CAACK,EAAnB;QAAA;QAAA;QAAA;MAAA,QADF;IAUD,CAXA;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD;;GA3DQjB,U;UACUJ,W;;;KADVI,U;AA6DT,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}